<Activity mc:Ignorable="sap sap2010" x:Class="CreateTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_dt_template" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_fileName" Type="OutArgument(x:String)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1220,1525</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CreateTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Corresponds to steps 1 and 2 of the Manual Process defined in PDD.&#xD;&#xA;Called when project is first started to check existence of (and create if needed) the itemsToClaim spreadsheet&#xA;Purpose: Create a copy of the template file (read from config) &#xA;In: original template path (from config file )&#xA;Out: a copy of template file in the Data\Output path with today's date as suffix in file name. If file already exists, it is appended.&#xA;Issues: None expected &#xA;" DisplayName="CreateTemplate" sap:VirtualizedContainerService.HintSize="805,1360" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="inputExists" />
      <Variable x:TypeArguments="x:Boolean" Name="outputExists" />
      <Variable x:TypeArguments="x:String" Name="inputFileName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign inputFileName" sap:VirtualizedContainerService.HintSize="763,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inputFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_config("TemplateFile").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:PathExists DisplayName="Path Exists - does input template file exist" Exists="[inputExists]" sap:VirtualizedContainerService.HintSize="763,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[inputFileName]" PathType="File" />
    <ui:MultipleAssign DisplayName="Multiple Assign - append current date to file name" sap:VirtualizedContainerService.HintSize="763,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_fileName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[System.DateTime.Today.ToShortDateString.Replace("/","-" )]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_fileName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["ItemsToClaim_" + System.DateTime.Today.ToShortDateString.Replace("/","-" ) + ".xlsx"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_fileName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine("Data\Output", out_fileName)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:PathExists DisplayName="Path Exists - Does output file exist?" Exists="[outputExists]" sap:VirtualizedContainerService.HintSize="763,89" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[out_fileName]" PathType="File" />
    <If sap2010:Annotation.AnnotationText="If a copy of template with today's date  already exists then it will be appended. If it does not exist, a new copy of template will be created with today's date as the file name's suffix." Condition="[outputExists]" DisplayName="If - check if output file exists" sap:VirtualizedContainerService.HintSize="763,347" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Log Message (file already exists, will be appended)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[out_fileName + &quot; already exists, file will be appended.&quot;]" />
      </If.Then>
      <If.Else>
        <ui:CopyFile ContinueOnError="False" Destination="[out_fileName]" DisplayName="Copy File - Create copy of template with today's date" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[inputFileName]" />
      </If.Else>
    </If>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_template]" DisplayName="Read Range - Read template into data table " sap:VirtualizedContainerService.HintSize="763,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Items" WorkbookPath="[out_fileName]" />
    <ui:ClearDataTable sap2010:Annotation.AnnotationText="will later be filled with item data, and used to append the template excel file" DataTable="[out_dt_template]" DisplayName="Clear template data table" sap:VirtualizedContainerService.HintSize="763,79" sap2010:WorkflowViewState.IdRef="ClearDataTable_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ClearDataTable>
  </Sequence>
</Activity>